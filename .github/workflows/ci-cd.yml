name: Automatic Version Tagging

on:
  push:
    branches:
      - master  # Set the branch where versioning should occur

jobs:
  tag-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Change this to the required version of Node.js

      - name: Install dependencies
        run: npm install --legacy-peer-deps  # Install dependencies for Angular project

      - name: Install Angular CLI
        run: npm install -g @angular/cli  # Ensure Angular CLI is installed globally

      - name: Build the Angular app
        run: |
          echo "Building the Angular application..."
          CI=false ng build --verbose  # Build Angular app in production mode with verbose logging

      - name: Tagging setup
        run: |
          # Determine the latest tag or initialize as v0.0.0 if no tags found
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")

          # Remove the 'v' from the version string
          VERSION_BITS=(${LATEST_TAG//v/})
          IFS='.' read -r V_MAJOR V_MINOR V_PATCH <<< "$VERSION_BITS"
          V_MAJOR=${V_MAJOR:-0}  # Default to 0 if not present
          V_MINOR=${V_MINOR:-0}  # Default to 0 if not present
          V_PATCH=${V_PATCH:-0}  # Default to 0 if not present

          # Increment the patch version until a non-existing tag is found
          while git rev-parse "v$V_MAJOR.$V_MINOR.$V_PATCH" >/dev/null 2>&1; do
              V_PATCH=$((V_PATCH + 1))  # Increment patch version
          done

          NEW_TAG="v$V_MAJOR.$V_MINOR.$V_PATCH"
          echo "New Tag: $NEW_TAG"

          # Check if the tag already exists on the remote
          if git ls-remote --tags origin | grep -q "refs/tags/$NEW_TAG"; then
              echo "Tag $NEW_TAG already exists in the remote, skipping tag creation."
          else
              # Create the new tag and push it
              echo "Creating and pushing tag $NEW_TAG"
              git tag $NEW_TAG
              git push origin $NEW_TAG
              echo "Tag $NEW_TAG pushed."
