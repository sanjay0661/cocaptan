name: CI/CD Pipeline for Docker Deployment

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: sanjayraj/cocaptan  # Replace with your Docker Hub repositor

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Retrieve the Current Version and Generate Tag
      - name: Get Current Version and Generate Tag
        id: version
        run: |
          # Get the most recent tag (e.g., v1, v2, v3, ...)
          CURRENT_TAG=$(git tag -l "v*" | sort -V | tail -n 1)
          
          # Increment the last tag number if it exists
          if [ -z "$CURRENT_TAG" ]; then
            NEW_TAG="v1"  # Start with v1 if no tags are present
          else
            LAST_VERSION=$(echo "$CURRENT_TAG" | sed 's/v//')
            NEW_VERSION=$(( LAST_VERSION + 1 ))
            NEW_TAG="v$NEW_VERSION"
          fi

          echo "TAG=$NEW_TAG" >> $GITHUB_ENV
        shell: bash

      # Step 3: Create and Push Git Tag
      - name: Create and Push Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build Docker Image
      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:${{ env.TAG }} .

      # Step 6: Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: docker push $IMAGE_NAME:${{ env.TAG }}

      # Step 7: Set up SSH to Deploy to Remote Server
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}

      # Step 8: Deploy to Remote Server
      - name: Deploy Application to Droplet
        run: |
          ssh root@$HOST "
            docker pull $IMAGE_NAME:${{ env.TAG }} &&
            docker stop cocaptan || true &&
            docker rm cocaptan || true &&
            docker run -d --name cocaptan -p 4200:4200 $IMAGE_NAME:${{ env.TAG }} --host 0.0.0.0
          "
        env:
          HOST: ${{ secrets.HOST }}
