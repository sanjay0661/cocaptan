name: Automatic Version Tagging

on:
  push:
    branches:
      - master  # Run the workflow when there is a push on the main branch

jobs:
  version_tagging:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Git user
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Get the latest tag
      id: get_tag
      run: echo "::set-output name=tag::$(git describe --tags --abbrev=0 || echo 'v0.0.0')"

    - name: Increment version
      id: increment_tag
      run: |
        tag=$(echo "${{ steps.get_tag.outputs.tag }}" | sed 's/^v//')
        IFS='.' read -ra PARTS <<< "$tag"
        major=${PARTS[0]}
        minor=${PARTS[1]}
        patch=${PARTS[2]}

        # Increment the minor version (change logic here for major/patch if needed)
        new_version="v$major.$((minor+1)).0"
        echo "New version: $new_version"
        echo "::set-output name=new_tag::$new_version"

    - name: Check if tag exists
      id: check_tag
      run: |
        git fetch --tags
        if git rev-parse "${{ steps.increment_tag.outputs.new_tag }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "exists=false" >> $GITHUB_ENV
      shell: bash

    - name: Push new tag
      if: env.exists == 'false'
      run: |
        git tag "${{ steps.increment_tag.outputs.new_tag }}"
        git push origin "${{ steps.increment_tag.outputs.new_tag }}"
      env:
        TOKEN: ${{ secrets.GH_TOKEN }}  # Use your personal access token or secret here
