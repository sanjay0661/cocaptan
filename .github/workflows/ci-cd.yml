name: CI/CD Pipeline for Docker Deployment

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: sanjayraj/cocaptan  # Replace with your Docker Hub repository

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Retrieve the Current Version and Generate Tag
      - name: Get Current Version and Generate Tag
        id: version
        run: |
          # Check if there are any tags
          if git describe --tags --abbrev=0 2>/dev/null; then
            # If tags exist, increment the last tag number
            CURRENT_TAG=$(git describe --tags --abbrev=0)
            NEW_VERSION=$(( ${CURRENT_TAG#v} + 1 ))
            echo "TAG=v$NEW_VERSION" >> $GITHUB_ENV
          else
            # If no tags exist, use commit number or sha
            COMMIT_SHA=$(git rev-parse --short HEAD)
            echo "TAG=v$COMMIT_SHA" >> $GITHUB_ENV
          fi
        shell: bash

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build Docker Image
      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:${{ env.TAG }} .

      # Step 5: Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: docker push $IMAGE_NAME:${{ env.TAG }}

      # Step 6: Tag and Push Git Version
      - name: Create and Push Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}

      # Step 7: Set up SSH to Deploy to Remote Server
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}

      # Step 8: Deploy to Remote Server
      - name: Deploy Application to Droplet
        run: |
          ssh root@$HOST "
            docker pull $IMAGE_NAME:${{ env.TAG }} &&
            docker stop cocaptan || true &&
            docker rm cocaptan || true &&
            docker run -d --name cocaptan -p 4200:4200 $IMAGE_NAME:${{ env.TAG }} --host 0.0.0.0
          "
        env:
          HOST: ${{ secrets.HOST }}
